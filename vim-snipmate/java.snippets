snippet log
	System.out.println(${1});

snippet implist
	import java.util.ArrayList;
	import java.util.Arrays;
	import java.util.Iterator;
	import java.util.List;
snippet impjson
	import org.json.JSONObject;
	import org.json.JSONArray;
snippet impgson
	import import com.google.gson.Gson;
snippet imptest
	import static org.junit.Assert.assertEquals;
	import static org.junit.Assert.assertNotEquals;
	import static org.junit.Assert.assertTrue;

snippet impinject
	import com.google.inject.Inject;

snippet impdate
	import java.text.ParseException;
	import java.text.DateFormat;
	import java.text.SimpleDateFormat;
	import java.util.Date;
	import java.sql.Timestamp;
	import java.util.Locale;

snippet impstring
	import org.apache.commons.lang3.StringUtils;

snippet imparray
	import java.util.Arrays;

snippet impexception
	import java.util.concurrent.ExecutionException;
	import java.io.IOException;

snippet impapache
	import org.apache.commons.lang3.builder.ToStringBuilder;
	import org.apache.commons.lang3.builder.ToStringStyle;

snippet json
	import org.json.JSONObject;
	JSONObject jsonObject = new JSONObject("{}");

snippet exdate
	try {
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
		Date date = format.parse("2012-11-17T12:10:00.000+08:00");
		int d = (int)date.getTime();
		System.out.println("time = " + Integer.toString(d));
	} catch (Exception ParseException) {

	}   

snippet itoa
	Integer.toString(${1});

snippet atoi
	Integer.parseInt(${1});

snippet empty
	StringUtils.isEmpty(${1});

snippet main
	public class ${1/*classname*/} {

		public static void main (String[] args) {
			${2}
		}
	}

snippet sw
	switch(${1}) {
		case 1:
			break;
		case 3:
			break;
	}

snippet for
	for (int i = 0; i < n ; i++) {
	}

snippet list
	List<String> status = new ArrayList<>(Arrays.asList("0", "1"));

snippet map
	Map<String, String> m = new HashMap<>();

snippet time
	System.currentTimeMillis();

snippet /*
	/**
	 * ${1}
	 * @param xxx xxx
	 * @return String
	 */

snippet func
	public void function ${1}() {
		${2}
	}

snippet unit
	package com.xxx;
	import static org.junit.Assert.assertEquals;
	import org.junit.*;

	public class AppTest {
		private App tester;

		@Before
		public void setUp() throws Exception {
			this.tester = new App();
		}

		@Test
		public void testApp() throws exception {
			String ret = this.tester.getLink(1);
			assertEquals("The url should be xxxx", "http://", ret);
	 	}
	}


