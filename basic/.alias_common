alias tmux='fnTmux'
alias plog='tail -f /tmp/php.log'
alias s='source ~/.bash_profile  '
alias ecliStart='fn_eclim_start'
alias ecliStop='fn_eclim_stop'
alias ecliUpdate='ecliUpdate'
alias f='findFile'
alias vi='vim -p'
alias vim='vim -p'
alias cpu="ps aux | awk '{printf \"CPU Usage: %s Process: %s\n\n\", \$3, \$0}' | sort -n"
alias cpuSum="ps aux | awk '{sum += \$3} END {print sum}'"
alias mem="ps aux | awk '{printf \"%s %s\n\",\$4,\$0}' | sort -n"
alias memSum="ps aux | awk '{sum += \$4} END {print sum}' "
alias myHelp='fn_help'
alias ntpSync='sudo ntpdate -s time.stdtime.gov.tw'
alias gitDeleteBranch='fnGitDeleteBranch'
alias gitForceCommit='fnGitForceCommit'
alias c='/usr/local/bin/myExec.sh'
alias urlencode='sh /usr/local/bin/puritys/urlencode.sh '
alias urldecode='sh /usr/local/bin/puritys/urldecode.sh '
alias so='source ~/.bash_profile'

if [ command -v "ag" ]; then
    alias grep='ag --color-line-number "38;5;241" --color-match "38;5;166" --color-path "38;5;29" '
    alias Grep='ag --color-line-number "38;5;241" --color-match "38;5;166" --color-path "38;5;29" '
    alias ag='ag --color-line-number "38;5;241" --color-match "38;5;166" --color-path "38;5;29" '
else
    alias Grep='grep'
fi

# fasd
alias a='fasd -a'        # any
alias s='fasd -si'       # show / search / select
alias d='fasd -d'        # directory
alias f='fasd -f'        # file
alias sd='fasd -sid'     # interactive directory selection
alias sf='fasd -sif'     # interactive file selection
alias z='fasd_cd -d'     # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# date to timestamp
alias mydate='fnDate'

fn_help() {
    echo "mem: get the process using most memory"
    echo "memSum: get sum of memory usage"
    echo "ecliStart: start eclim"
    echo "ecliUpdate: Update .class of java mvn project"


}


fn_eclim_start() {
    if [ `uname` == 'Darwin' ]; then
        ps aux |grep -i ecli |grep -v grep | awk '{printf "kill -9 %s\n",$2}' | sudo sh
        open $HOME/.vim/Eclipse.app
        echo "Wait for eclipse start"
        sleep 50
        DISPLAY=:1 $HOME/.vim/Eclipse.app/Contents/Eclipse/eclimd -b
        echo "Wait 20 seconds for eclim start."
        sleep 20
    else
        ps aux |grep -i Xvfb |grep -v grep | awk '{printf "kill -9 %s\n",$2}' | sudo sh
        sudo Xvfb :1 -screen 0 1024x768x24 &
        DISPLAY=:1 ~/.vim/eclipse/eclipse -nosplash -consolelog -debug -application org.eclipse.equinox.p2.director   -repository http://download.eclipse.org/releases/juno      -installIU org.eclipse.wst.web_ui.feature.feature.group
        DISPLAY=:1 ~/.vim/eclipse/eclimd -b
        echo "Wait 20 seconds for eclim start."
        sleep 20
    fi
}

fn_eclim_stop() {
    ps aux |grep -i ecli |grep -v grep | awk '{printf "kill -9 %s\n",$2}' | sudo sh
    ps aux |grep -i Xvfb |grep -v grep | awk '{printf "kill -9 %s\n",$2}' | sudo sh
}

ecliUpdate() {
    sudo mvn eclipse:clean eclipse:eclipse -Dmaven.pmd.skip=true -Dmaven.checkstyle.skip=true -Dmaven.cpd-check.skip=true -Dmaven.cpd.skip=true -Dcheckstyle.skip -Dmaven.javadoc.skip=true -Dpmd.skip=true
    sudo chmod 777 .classpath
    sed 's/kind="var"/kind="lib"/' -i .classpath
    h=`echo $HOME | sed 's/\//\\\\\//g'`
    sed "s/M2_REPO/$h\/.m2\/repository/" -i .classpath
}


findFile () {
    text="*$@*"
    find ./ -iname  $text
}

fnGitDeleteBranch() {
    echo -e "git branch -D $1\n"
    echo -e "git push origin --delete $1\n"
    git branch -D $1
    git push origin --delete $1
}

fnGitForceCommit() {
    echo -e "git commit -m "$1" --no-verify\n"
    git commit -m "$1" --no-verify
}

fnDate() {
    while true; do
        if [ "x$1" == "x" ];then
            break;
        fi
        case "$1" in
          -t | --timestamp   ) timestamp=$2; shift 2 ;;
          -d | --date ) date=$2; shift 2 ;;
          -o | --output ) output=$2; shift 2 ;;
          -h | --help  ) 
              echo "Usage:"
              echo "mydate -d 20170101 -o time"
              echo "-t: timestamp, ex: -t 12312 "
              echo "-d: date, ex: -d 20170301"
              echo "-o: date/timestamp/time, ex: -o time"
              shift 1 
              return
              ;;
          --) echo "-- is not a correct option.";shift 1; ;;
          * ) echo "$1 is not a correct option.";shift 1; ;;
        esac
    done

    os=`uname`
    if [ "x$os" == "xDarwin" ]; then
        case "$output" in
        time*)
            echo `date +%s`
        ;;
        date)
            echo `date "+%Y/%m/%d %H:%M:%S"`
        ;;
        *)
            echo `date -r $1`
        ;;
        esac
    else
        case "$output" in
        time*)
            # date +%s -d "20180305"
            if [ "x" != "x$date" ]; then
                date=" -d $date"
            fi
            cmd="date +%s $date"
        ;;
        date)
            echo `date "+%Y/%m/%d %H:%M:%S"`
            return
        ;;
        *)
            echo "Please use mydate -h"
            return
        ;;
        esac

    fi
    echo "$cmd"
    echo `$cmd`

}

fnTmux() {
    c=$1
    cmd="/usr/bin/tmux"
    if [ ! -f $cmd ]; then
        cmd="/usr/local/bin/tmux"
    fi
    if [ "xls" == "x$c" ] || [ "xsource-file" == "x$c" ]; then
        $cmd $c $2
    else
        $cmd source-file ~/.tmux.conf
        $cmd -2 attach -t $1 || $cmd -2 new -s $1
    fi
}
