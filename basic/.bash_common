# powerline
# ⮑  ⮐ ➞  ♺
#
powerline () {
    host=$1
    arrow=$2
    arrowLight=$3
    local powPath=""
    local bg=30m
    local fg=253m
    local hostColor="\e[38;5;$fg\e[48;5;31m"
    local hostColorArrow="\e[38;5;31m\e[48;5;$bg"
    local color="\e[38;5;$fg\e[48;5;$bg"
    local arrowColor="\e[38;5;$bg"
    #\[\ek\h\e\\\] : display screen hostname
    setTerm
    if [[ $term == *"tmux"* ]]; then
        local s1=
    else
        local s1=♥
        local arrowLight=➞
    fi
    RET="$hostColor$s1 $host $hostColorArrow$arrow\[\e[0m\]"
    local path="$PWD"
    case $path in
      $HOME) path="~";;
      $HOME/*) path="~${path#$HOME}";;
      *) powPath="$color \[\e[0m\]";;
    esac

    if [ "x$path" == "x/" ];then
        RET="$RET$color$path $arrowColor$arrow\[\e[0m\]\n"
        return ;
    fi
    split=(${path//\// })
    length=${#split[@]}
    for ((i=0; i<$length;i++))
    do
        powPath="$powPath$color${split[$i]} \[\e[0m\]"
        j=$((i+1))
        if [ "$j" == "$length" ];then
            powPath="$powPath$arrowColor$arrow\[\e[0m\]"
        else
            powPath="$powPath$color$arrowLight \[\e[0m\]"
        fi
    done
    PS1="$RET$powPath\n"
}

changePS () {
    case $term in
        tmux*)
            getArrow
            screen_title;
        ;;
        screen*)
            getArrow
            screen_title;
        ;;
        xterm*)
            getArrow
        ;;
        *)
            getArrow
        ;;
    esac
    powerline $host $arrow $arrowLight
}

getArrow() {
    if [ `uname` == "Darwin" ]; then
        arrow=`perl -e 'print "\xee\x82\xb0"'`
        arrowLight=`perl -e 'print "\xee\x82\xb1"'`
    else
        arrow=`echo -e "\xee\x82\xb0"`
        arrowLight=`echo -e "\xee\x82\xb1"`
    fi
}

screen_path() {
    local path="$PWD"
    case $path in
      $HOME) path="~";;
      $HOME/*) path="~${path#$HOME}";;
    esac
    if [ "x$path" == "x/" ];then
        screenPath=$path
        return ;
    fi
    local split=(${path//\// })
    local length=${#split[@]}
    local i=$((length-1))
    if [ "x$length" != "1" ];then
        path=${split[$i]}
    fi
    screenPath=$path
}

screen_title () {
    screen_path;
    screenPath=`echo $screenPath | cut -c1-13` 
    isSetTitle=0;
    if [ "xtmux-256color" == "x$term" ]; then
        if [ -f "/usr/bin/tmux" ]; then
            tmux="/usr/bin/tmux";
        elif [ -f "/usr/local/bin/tmux" ]; then
            tmux="/usr/local/bin/tmux"
        fi
        if [ "x" != "x$tmux" ]; then
            hostname=`hostname`
            hostname=`echo $hostname | cut -c1-6`
            $tmux rename-window $hostname:$screenPath;
            isSetTitle=1;
        fi
    fi

    if [ "x0" == "x$isSetTitle" ]; then
        local title=`uname -n | cut -c1-5`
        title="$title:$screenPath"
        printf '\ek%s\e\\' "$title"
    fi
}

function getMySSHAgent {
    myname=`whoami`
    OS=$(uname -s)
    pids=`ps aux | grep $myname | grep ssh-agent | grep -v grep | awk '{print $2}'`
    pids=( $pids )
    length=${#pids[@]}
    for(( i=0; i<$length; i++ ))
    do
        pid=${pids[$i]}
        for(( j=0; j<4; j++ ))
        do
            if [[ X"$OS" == X"Darwin" ]]; then
                # $TMPDIR is environment variable on MAC OS
                sshagent=`ls $TMPDIR |grep ssh | xargs -n 1 -I%I find $TMPDIR%I -user $myname -type s | grep ssh |grep $pid | xargs ls -rt | awk '{print }'`
                #sshagent=$(find $TMPDIR -user `whoami` -type s | grep ssh |grep $pid | xargs ls -rt | awk '{print }')
            elif [[ X"$OS" == X"Linux" ]]; then
                sshagent=$(find /tmp/ssh-* -user `whoami` -type s -printf '%p\n' 2>/dev/null | grep $pid) 
            fi
            if [ "x$sshagent" != "x" ];then
                cat <<- EOF > ~/.ssh/environment
                    export SSH_AUTH_SOCK=$sshagent
                    export SSH_AGENT_PID=$pid
EOF
                source ~/.ssh/environment
                return 
            fi
            pid=$(($pid - 1))
        done
    done
}

setTerm() {
    if [ "x" != "x$TMUX" ]; then
        term="tmux-256color"
    fi

    if [[ "x$TERMCAP" = *"screen"* ]];then
        term="screen-256color"
    fi
    if [ "x" == "x$term" ]; then
        term="xterm"
    fi
}

ssh() {
    if [ -f "/usr/bin/tmux" ]; then
        tmux="/usr/bin/tmux";
    elif [ -f "/usr/local/bin/tmux" ]; then
        tmux="/usr/local/bin/tmux"
    fi
    if [ "x" != "x$tmux" ]; then
        if [[ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" == *"tmux"* ]]; then
            $tmux rename-window "$*"
            #$tmux set-window-option automatic-rename "on" 1>/dev/null
        fi
    fi

    command ssh "$@"
}

if [ -f ~/.bash_docker ]; then
    . ~/.bash_docker
fi


