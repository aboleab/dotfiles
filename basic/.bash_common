powerline () {
    host=$1
    arrow=$2
    arrowLight=$3
    local powPath=""
    local color="\[\e[30;47m\]"
    local startColor="\[\e[30m\]"
    local arrowColor="\[\e[37m\]"
    #\[\ek\h\e\\\] : display screen hostname
    PS1="$color[$host]@ \[\e[0m\]"
    local path="$PWD"
    case $path in
      $HOME) path="~";;
      $HOME/*) path="~${path#$HOME}";;
      *) powPath="$color/\[\e[0m\]";;
    esac

    if [ "x$path" == "x/" ];then
        PS1="$PS1$color$path $arrowColor$arrow\[\e[0m\]\n"
        return ;
    fi
    split=(${path//\// })
    length=${#split[@]}
    for ((i=0; i<$length;i++))
    do
        powPath="$powPath$color${split[$i]} \[\e[0m\]"
        j=$((i+1))
        if [ "$j" == "$length" ];then
            powPath="$powPath$arrowColor$arrow\[\e[0m\]"
        else
            powPath="$powPath$color$arrowLight \[\e[0m\]"
        fi
    done
    PS1="$PS1$powPath\n"
}

changePS () {
    case $TERM in
        screen*)
            arrow=`echo -e "\xee\x82\xb0"`
            arrowLight=`echo -e  "\xee\x82\xb1"`
            screen_title;
            ;;
        xterm*)
            if [ `uname` == "Darwin" ]; then
                arrow=`perl -e 'print "\xee\x82\xb0"'`
                arrowLight=`perl -e 'print "\xee\x82\xb1"'`
            else
                arrow=`echo -e "\xee\x82\xb0"`
                arrowLight=`echo -e "\xee\x82\xb1"`
            fi
        ;;
        *)
            #echo "TERM = $TERM"
            arrow=`echo -e "\xee\x82\xb0"`
            arrowLight=`echo -e "\xee\x82\xb1"`
        ;;
    esac
    powerline $host $arrow $arrowLight
    export PS1
}

screen_path() {
    local path="$PWD"
    case $path in
      $HOME) path="~";;
      $HOME/*) path="~${path#$HOME}";;
    esac
    if [ "x$path" == "x/" ];then
        screenPath=$path
        return ;
    fi
    local split=(${path//\// })
    local length=${#split[@]}
    local i=$((length-1))
    if [ "x$length" != "1" ];then
        path=${split[$i]}
    fi
    screenPath=$path
}

screen_title () {
    #local arrow=`echo -e "\xee\x82\xb0"`
    #local arrowLight=`echo -e "\xee\x82\xb1"`
    #local arrowLeftLight="<"#`echo -e "\xee\x82\xb3"`
    screen_path;
    local title=`uname -n | cut -c1-5`
    screenPath=`echo $screenPath | cut -c1-10` 
    title="$title:$screenPath"
    printf '\ek%s\e\\' "$title"
}

function getMySSHAgent {
    myname=`whoami`
    OS=$(uname -s)
    pids=`ps aux | grep $myname | grep ssh-agent | grep -v grep | awk '{print $2}'`
    pids=( $pids )
    length=${#pids[@]}
    for(( i=0; i<$length; i++ ))
    do  
        pid=${pids[$i]}
        for(( j=0; j<4; j++ ))
        do  
            if [[ X"$OS" == X"Darwin" ]]; then
                # $TMPDIR is environment variable on MAC OS
                sshagent=$(find $TMPDIR -user `whoami` -type s | grep ssh |grep $pid | xargs ls -rt | awk '{print }')
            elif [[ X"$OS" == X"Linux" ]]; then
                sshagent=$(find /tmp/ssh-* -user `whoami` -type s -printf '%p\n' 2>/dev/null | grep $pid) 
            fi  
            if [ "x$sshagent" != "x" ];then
                cat <<- EOF > ~/.ssh/environment
                    export SSH_AUTH_SOCK=$sshagent
                    export SSH_AGENT_PID=$pid
EOF
                source ~/.ssh/environment
                return 
            fi  
            pid=$(($pid - 1))
        done
    done
}

. .bash_docker


