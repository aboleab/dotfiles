"" NerdTree start "
map <C-f> :NERDTreeToggle<CR> " open NerdTree tab
" show line
let NERDTreeShowLineNumbers=1
let NERDTreeAutoCenter=1
" show hidden file
let NERDTreeShowHidden=1
" set with
let NERDTreeWinSize=31
" skip specific file extensions
let NERDTreeIgnore=['\~$', '\.swp', '\.swo']
" show bookmark
let NERDTreeShowBookmarks=1
let g:NERDTreeGlyphReadOnly=0
let g:NERDTreeDirArrowExpandable=1
let g:NERDTreeDirArrowCollapsible=1
"" NerdTree end "

"" CtrlP Fuzzy file finder
"let g:ctrlp_cmd = 'CtrlPMRU' " most recently used mode
"let g:ctrlp_by_filename=1    " fuzzy search on filename rather than whole path
"let g:ctrlp_split_window=1   " open file on a new tab
"set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.tgz
"let g:ctrlp_custom_ignore = {
"  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
"  \ 'file': '\v\.(exe|so|dll)$',
"  \ 'link': 'some_bad_symbolic_links',
"  \ }
"" CtrlP end

"" JavaImp Start
" A dir to save JavaImp settings and cache files
let g:JavaImpDataDir = $HOME . "/.vim/JavaImp"
" Java Source code path
let g:JavaImpPaths = $HOME . "/openjdk/openjdk/jdk/src/share/classes/"
" :JIG create dir, :JI Auto add import file, :JIS  sort the import list,  :JIF  find the source on your scursor
"imap <c-i> <c-c>:JI<CR>i
"" JavaImp End


"" Snippet Start
"let g:snippets_dir='~/.vim/bundle/vim-snipmate/snippets/'
"call ExtractSnipsFile(g:snippets_dir.'javascript.snippets', 'javascript')
"call ExtractSnipsFile(g:snippets_dir.'php.snippets', 'php')
" call ExtractSnipsFile(g:snippets_dir.'myCustomSnippets.snippets',
" 'javascript')
let g:snipMate = get(g:, 'snipMate', {}) " Allow for vimrc re-sourcing
let g:snipMate.scope_aliases = {}
let g:snipMate.no_default_aliases = 1

let g:snipMate.scope_aliases['javascript'] = 'core_javascript'
let g:snipMate.scope_aliases['html'] = 'core_html,js'
let g:snipMate.scope_aliases['php'] = 'core_php,core_html'
let g:snipMate.scope_aliases['inc'] = 'core_php'
"" Snippet End

"" ntpeters/vim-better-whitespace start
highlight ExtraWhitespace ctermbg=251
"" ntpeters/vim-better-whitespace end

"" eclim start
let g:EclimLogLevel="error"
let g:EclimJavaValidate=1
let g:EclimJavaCheckstyleOnSave=1
"let g:EclimMavenPomClasspathUpdate = 1 " Cannot add correct dependencies if it include properties.
"" eclim end

"" Hard time start
let g:hardtime_default_on = 1
let g:hardtime_timeout = 50
"let g:hardtime_allow_different_key = 1
let g:list_of_normal_keys = []
let g:list_of_visual_keys = []
let g:list_of_insert_keys = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
let g:list_of_disabled_keys = []
"" Hard time end

"" vim-syntastic/syntastic start
let g:syntastic_php_checkers = ['php']
"" vim-syntastic/syntastic end

""FZF start
""FZF end

